# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  mlnetJob:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Run ML Pipeline
      run: dotnet test ./MLPipelines/MLPipelines.csproj --no-build --verbosity normal --settings /home/runner/work/Tic-Tac-Toe/Tic-Tac-Toe/MLPipelines/MLPipeline.runsettings

    - name: Commit and Push File Changes
      run: |
          DoCommit=0
          git status >> "gitstatus.txt"
          cat "gitstatus.txt"
          IsMainBranch=$(grep -i -c "Your branch is up to date with 'origin/main'." "gitstatus.txt")
          echo "IsMainBranch=$IsMainBranch"
          NothingToCommit=$(grep -i -c "nothing to commit, working tree clean" "gitstatus.txt")
          echo "NothingToCommit=$NothingToCommit"
          HasNewModelZip=$(grep -i -c "TicTacToeML/MLModels/[:alnum:]+[.]zip" "gitstatus.txt")
          echo "HasNewModelZip=$HasNewModelZip"
          HasProcessedCsv=$(grep -i -c "TicTacToeML/TrainingData/Processed/[:alnum:]+[.]csv" "gitstatus.txt")
          echo "HasProcessedCsv=$HasProcessedCsv"
          HasRejectedCsv=$(grep -i -c "TicTacToeML/TrainingData/Rejected/[:alnum:]+[.]csv" "gitstatus.txt")
          echo "HasRejectedCsv=$HasRejectedCsv"
          
